{
  "name": "experiment",
  "plural": "experiments",
  "base": "PersistedModel",
  "idInjection": true,
  "options": {
    "validateUpsert": true
  },
  "foreignKeys": {
    "experiment_set_id": {
      "name": "experimentsExperimentSetIDForeignKey",
      "foreignKey": "experiment_set_id",
      "entityKey": "id",
      "entity": "experiment_set"
    },
    "system_function_id": {
      "name": "experimentSysFuncTrafDemandSysFuncIdForeignKey",
      "foreignKey": "system_function_id",
      "entityKey": "id",
      "entity": "system_function"
    },
    "traffic_demand_configuration_id": {
      "name": "experimentSysFuncTrafDemandTrafDemIdForeignKey",
      "foreignKey": "traffic_demand_configuration_id",
      "entityKey": "id",
      "entity": "traffic_demand_configuration"
    },
    "node_placement_configuration_id": {
      "name": "experimentsNodesPlacementIDForeignKey",
      "foreignKey": "node_placement_configuration_id",
      "entityKey": "id",
      "entity": "node_placement_configuration"
    }
  },
  "properties": {
    "name": {
      "type": "string",
      "required": true
    },
    "start_time": {
      "type": "date",
      "required": false
    },
    "end_time": {
      "type": "date",
      "required": false
    },
    "status": {
      "type": "string",
      "required": false
    }
  },
  "validations": [],
  "relations": {
    "experimentsNodesPlacementIDRelation": {
      "type": "belongsTo",
      "model": "node_placement_configuration",
      "foreignKey": "node_placement_configuration_id"
    },
    "experimentsExperimentSetIDRelation": {
      "type": "belongsTo",
      "model": "experiment_set",
      "foreignKey": "experiment_set_id"
    },
    "experimentSysFuncTrafDemandSysFuncIdRelation": {
      "type": "belongsTo",
      "model": "system_function",
      "foreignKey": "system_function_id"
    },
    "experimentSysFuncTrafDemandTrafDemIdRelation": {
      "type": "belongsTo",
      "model": "traffic_demand_configuration",
      "foreignKey": "traffic_demand_configuration_id"
    }
  },
  "acls": [],
  "methods": {
    "start": {
      "isStatic": true,
      "accepts": [
        {
          "arg": "id", "type": "any", "description": "Model id", "required": true}
      ],
      "returns": {
        "arg": "result",
        "type": "string"
      },
      "http": {
        "verb": "get", "path": "/:id/start"
      },
      "description": "Start an experiment."
    }
  }
}
