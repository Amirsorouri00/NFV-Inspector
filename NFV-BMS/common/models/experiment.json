{
  "name": "experiment",
  "plural": "experiments",
  "base": "PersistedModel",
  "idInjection": true,
  "options": {
    "validateUpsert": true
  },
  "foreignKeys": {
    "experiment_set_id": {
      "name": "experimentsExperimentSetIDForeignKey",
      "foreignKey": "experiment_set_id",
      "entityKey": "id",
      "entity": "experiment_set"
    },
    "system_function_id": {
      "name": "experimentSysFuncTrafDemandSysFuncIdForeignKey",
      "foreignKey": "system_function_id",
      "entityKey": "id",
      "entity": "system_function"
    },
    "traffic_demand_configuration_id": {
      "name": "experimentSysFuncTrafDemandTrafDemIdForeignKey",
      "foreignKey": "traffic_demand_configuration_id",
      "entityKey": "id",
      "entity": "traffic_demand_configuration"
    },
    "node_placement_configuration_id": {
      "name": "experimentsNodesPlacementIDForeignKey",
      "foreignKey": "node_placement_configuration_id",
      "entityKey": "id",
      "entity": "node_placement_configuration"
    },
    "vnf_properties_configuration_set_id": {
      "name": "experimentsVnfPropConfSetIDForeignKey",
      "foreignKey": "vnf_properties_configuration_set_id",
      "entityKey": "id",
      "entity": "vnf_properties_configuration_set"
    },
    "affinity_rule_configuration_id": {
      "name": "experimentAffinityRuleConfIDFK",
      "foreignKey": "affinity_rule_configuration_id",
      "entityKey": "id",
      "entity": "affinity_rule_configuration"
    }
  },
  "properties": {
    "name": {
      "type": "string",
      "required": true
    },
    "is_virtual": {
      "type": "boolean",
      "required": false,
      "default": false
    }
  },
  "validations": [],
  "relations": {
    "node_placement_configuration": {
      "type": "belongsTo",
      "model": "node_placement_configuration",
      "foreignKey": "node_placement_configuration_id"
    },
    "experiment_set": {
      "type": "belongsTo",
      "model": "experiment_set",
      "foreignKey": "experiment_set_id"
    },
    "system_function": {
      "type": "belongsTo",
      "model": "system_function",
      "foreignKey": "system_function_id"
    },
    "traffic_demand_configuration": {
      "type": "belongsTo",
      "model": "traffic_demand_configuration",
      "foreignKey": "traffic_demand_configuration_id"
    },
    "vnf_properties_configuration_set": {
      "type": "belongsTo",
      "model": "vnf_properties_configuration_set",
      "foreignKey": "vnf_properties_configuration_set_id"
    },
    "experiment_nodes_configurations": {
      "type": "hasMany",
      "model": "experiment_node_configuration",
      "foreignKey": "experiment_id"
    },
    "affinity_rule_configuration": {
      "type": "belongsTo",
      "model": "affinity_rule_configuration",
      "foreignKey": "affinity_rule_configuration_id"
    }
  },
  "acls": [],
  "methods": {
    "start": {
      "accepts": [
        {
          "arg": "id",
          "type": "any",
          "description": "Model id",
          "required": true
        }
      ],
      "returns": {
        "arg": "result",
        "type": "string"
      },
      "description": "Start an experiment.",
      "http": {
        "verb": "get",
        "path": "/:id/start"
      }
    },
    "validate": {
      "accepts": [
        {
          "arg": "id",
          "type": "any",
          "description": "Model id",
          "required": true
        }
      ],
      "returns": {
        "arg": "result",
        "type": "string"
      },
      "description": "Validate an experiment parameters.",
      "http": {
        "verb": "get",
        "path": "/:id/validate"
      }
    },
    "getNodeResourceAllocationConfiguration": {
      "accepts": [
        {
          "arg": "id",
          "type": "any",
          "description": "Experiment id",
          "required": true
        },
        {
          "arg": "node_id",
          "type": "any",
          "description": "Node id",
          "required": true
        }
      ],
      "returns": {
        "arg": "result",
        "type": "json"
      },
      "description": "Retrieve a node's resource allocation configuration in current experiment.",
      "http": {
        "verb": "get",
        "path": "/:id/:node_id/getNodeResourceAllocationConfiguration"
      }
    },
    "placeNode": {
      "accepts": [
        {
          "arg": "id",
          "type": "any",
          "description": "Experiment id",
          "required": true
        },
        {
          "arg": "node_id",
          "type": "any",
          "description": "Node id",
          "required": true
        },
        {
          "arg": "parent_node_id",
          "type": "any",
          "description": "Parent node id",
          "required": true
        }
      ],
      "returns": {
        "arg": "result",
        "type": "json"
      },
      "description": "Place a node_id in experiment's placement configuration and validate. If it's not validated, then it won't place it.",
      "http": {
        "verb": "get",
        "path": "/:id/:node_id/:parent_node_id/placeNode"
      }
    },
    "getNodesResourceQuotaUsage": {
      "accepts": [
        {
          "arg": "id",
          "type": "any",
          "description": "Experiment id",
          "required": true
        }
      ],
      "returns": {
        "arg": "result",
        "type": "json"
      },
      "description": "Get experiment placement nodes quota usages.",
      "http": {
        "verb": "get",
        "path": "/:id/getNodesResourceQuotaUsage"
      }
    }
  }
}
